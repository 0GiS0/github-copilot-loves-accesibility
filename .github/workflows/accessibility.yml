name: Accessibility Testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  axe:
    name: Test with axe-core
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: |
          npm install -g @axe-core/cli http-server
          sudo apt-get update && sudo apt-get install -y chromium jq
        
      - name: Install browser-driver-manager
        run: npm install -g browser-driver-manager

      - name: Install compatible Chrome and ChromeDriver
        run: npx browser-driver-manager install chrome
        
      - name: Start HTTP server in background
        run: http-server -p 5500 . &
        
      - name: Wait for server to start
        run: sleep 3
        
      - name: Run axe-core accessibility tests
        continue-on-error: true
        run: |
          echo "üîç Running accessibility tests with axe-core..."
          axe http://localhost:5500  --user-data-dir=/tmp/axe-$$ --verbose --save axe-results.json
          echo "üìã Summary of accessibility issues:"
          cat axe-results.json | grep -A 10 '"violations":'
          echo "‚ùå Full details are available in the axe-results.json artifact"
        
      - name: Parse accessibility results for PR comment
        if: github.event_name == 'pull_request'
        id: parse-results
        run: |
          if [ -f axe-results.json ]; then
            violations=$(cat axe-results.json | jq '.violations | length')
            echo "violations=$violations" >> $GITHUB_OUTPUT
            
            if [ "$violations" -gt 0 ]; then
              echo "has_violations=true" >> $GITHUB_OUTPUT
              # Create a summary of violations
              cat axe-results.json | jq -r '.violations[] | "- **\(.impact | ascii_upcase)**: \(.description) (\(.nodes | length) instance(s))"' > violations_summary.txt
              echo "summary<<EOF" >> $GITHUB_OUTPUT
              cat violations_summary.txt >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
            else
              echo "has_violations=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "violations=0" >> $GITHUB_OUTPUT
            echo "has_violations=false" >> $GITHUB_OUTPUT
          fi
        
      - name: Comment on PR with accessibility results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const violations = '${{ steps.parse-results.outputs.violations }}';
            const hasViolations = '${{ steps.parse-results.outputs.has_violations }}' === 'true';
            
            let comment = '## üîç Accessibility Test Results\n\n';
            
            if (hasViolations) {
              comment += `‚ùå **Found ${violations} accessibility violation(s)**\n\n`;
              comment += '### Issues Found:\n';
              comment += '${{ steps.parse-results.outputs.summary }}';
              comment += '\n\nüìã **Next Steps:**\n';
              comment += '- Review the detailed JSON report in the workflow artifacts\n';
              comment += '- Fix the accessibility issues listed above\n';
              comment += '- Re-run the tests to verify fixes\n\n';
              comment += 'üí° **Learn more:** [Web Accessibility Guidelines](https://www.w3.org/WAI/WCAG21/quickref/)';
            } else {
              comment += '‚úÖ **No accessibility violations found!**\n\n';
              comment += 'üéâ Great job following accessibility best practices!';
            }
            
            comment += '\n\n---\n*This comment was generated automatically by the accessibility testing workflow.*';
            
            // Check if there's already a comment from this action
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.data.find(comment => 
              comment.body.includes('üîç Accessibility Test Results') && 
              comment.user.type === 'Bot'
            );
            
            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }
        
      - name: Upload accessibility results
        if: always()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: accessibility-results
          path: axe-results.json
          retention-days: 7
        
      - name: Fail workflow if accessibility violations found
        if: always()
        run: |
          if [ -f axe-results.json ]; then
            violations=$(cat axe-results.json | jq '.violations | length')
            if [ "$violations" -gt 0 ]; then
              echo "‚ùå Workflow failed: Found $violations accessibility violation(s)"
              echo "üîß Please fix the accessibility issues and re-run the workflow"
              exit 1
            else
              echo "‚úÖ No accessibility violations found - workflow passed"
            fi
          else
            echo "‚ö†Ô∏è  No results file found - treating as failure"
            exit 1
          fi
        
      - name: Stop HTTP server
        if: always()
        run: killall node || true